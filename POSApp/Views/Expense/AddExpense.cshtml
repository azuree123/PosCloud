@model POSApp.Core.ViewModels.ExpenseViewModel

@{
    Layout = null;
}
<div id="ordine" class="modal fade" role="dialog">
    @{ string s = ViewBag.edit;}

    @using (Html.BeginForm(s, "Expense", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog modal-md">
            <!-- Modal content-->
            <div class="modal-content ">
                <div class="modal-header modalheader">
                    <button type="button" class="close modalheader" data-dismiss="modal">×</button>

                    @if (s.Contains("Add"))
                    {
                        <h4 class="modal-title">
                            Add Expense
                        </h4>
                    }
                    else
                    {
                        <h4 class="modal-title">
                            Edit Expense
                        </h4>
                    }


                </div>
                <div class="modal-body">
                    <div class="panel panel-bd lobidrag">

                        <div class="panel-body">

                            @Html.HiddenFor(a => a.Id)
                            @Html.HiddenFor(a => a.CreatedBy)
                            @Html.HiddenFor(a => a.CreatedOn)
                            <div class="">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="row">
                                    <div class="form-group">

                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.ExpenseHeadId, htmlAttributes: new { @class = "control-label required1" })
                                            <div class="input-group">
                                                @Html.DropDownListFor(model => model.ExpenseHeadId, Model.ExpHeadDdl, "Select an Option", new { @class = "form-control", @required = true })
                                                <span class="input-group-addon" style="   ">
                                                    <a href="@Url.Action("AddExpenseHeadPartial","Expense")" class="modalShow1" id="#arrButtonIds">   <i class="fa fa-plus "></i></a>
                                                </span>
                                                @Html.ValidationMessageFor(model => model.ExpenseHeadId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label" })
                                         
                                                @Html.DropDownListFor(model => model.EmployeeId, Model.EmpDdl, "Select an Option", new { @class = "form-control", @required = true })
                                          
                                                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                       
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control unstyled", @required = true } })
                                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                        </div>
                                        <input type="hidden" id="expense_date" value="@Model.Date" />
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @cols = "8", @rows = "3" })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>



                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-lg btnPro">Save</button>
                    <button type="button" class="btn btn-default btn-lg btnPro1" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }

    <div id="ModalData1"></div>
    <script>
        function UpdateDdlExpenseHead() {
            $.ajax({
                url: "@Url.Action("GetExpenseHeadDdl", "Expense")",
                type: 'GET',
                cache: false,
                success: function (result) {
                    var $dropdown = $("#@Html.IdFor(a=>a.ExpenseHeadId)");
                    $dropdown.empty();
                    $dropdown.append($("<option />").val('').text("Select an Option"));
                    $.each(result, function (index, value) {
                        $dropdown.append($("<option />").val(value.Id).text(value.Name));
                    });

                }
            });

        }
        $('a.modalShow1').on('click', function () {


            $.ajax({
                url: this.href,
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#ModalData1').html(result).find('#ordine2').modal('show');
                    //newWin = window.open("", "", "width=800, height=600");
                    //    var query = " <" +"script> $('#AddDepartment').click();</"+"script>";
                    //    newWin.document.write(result + query);

                    //    if (newWin.closed) {
                    //        alert("Closed");
                    //    }
                }
            });

            return false;
        });
        $(document).ready(function () {
            var date = $('#expense_date').val();
            if (date !== '1/1/0001 12:00:00 AM' && date!=='') {
                var displayDate = new Date(date);
                displayDate.setDate(displayDate.getDate()+1);
                document.getElementById("@Html.IdFor(a=>a.Date)").valueAsDate = displayDate;
            }
        });
     
    </script>
</div>


 





