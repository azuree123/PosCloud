@using POSApp.Core.Enums
@model POSApp.Core.ViewModels.EmployeeModelView

@{
    Layout = null;
}
<div id="ordine5" class="modal fade" role="dialog">
    @using (Ajax.BeginForm("AddEmployeePartial", "Setup", new AjaxOptions
    {
        HttpMethod = "Post",
        OnSuccess = "$('#ordine5').modal('hide');UpdateDdlEmployee();"
        ,
        UpdateTargetId = "ordine5"
    }, new { enctype = "multipart/form-data" }))


    {
        @Html.AntiForgeryToken()

        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content ">
                <div class="modal-header modalheader">
                    <button type="button" class="close modalheader" data-dismiss="modal">×</button>


                    <h4 class="modal-title">
                        Add Employee
                    </h4>



                </div>
                <div class="modal-body">
                    <div class="panel panel-bd lobidrag">

                        <div class="panel-body">

                            @Html.HiddenFor(a => a.Id)
                            @Html.HiddenFor(a => a.CreatedBy)
                            @Html.HiddenFor(a => a.CreatedOn)
                            <div class="">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Name", @required = true, autofocus = "" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.ArabicName, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ArabicName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Name" } })
                                            @Html.ValidationMessageFor(model => model.ArabicName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "abc@example.com", @required = true, @pattern = @"^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "050xxxxxxxx", @pattern = @"^\(?([0-9])\)?[-. ]?([0-9])$" } })
                                            @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label " })
                                            @Html.DropDownListFor(a => a.Gender, new SelectList(Enum.GetValues(typeof(Gender))), "Select Gender", new { @class = "form-control" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new { @class = "control-label required1 " })
                                            <div class="input-group">
                                                @Html.DropDownListFor(model => model.DepartmentId, Model.DepartmentDdl, "Select an Option", new { @class = "form-control", @required = "true" })

                                                <span class="input-group-addon" style="">
                                                    <a href="@Url.Action("AddDepartmentPartial", "Setup")" class="modalShow1">
                                                        <i class="fa fa-plus "></i>
                                                    </a>
                                                </span>
                                                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.DesignationId, htmlAttributes: new { @class = "control-label required1 " })
                                            <div class="input-group">
                                                @Html.DropDownListFor(model => model.DesignationId, Model.DesignationDdl, "Select an Option", new { @class = "form-control", @required = "true" })

                                                <span class="input-group-addon" style="">
                                                    <a href="@Url.Action("AddDesignationPartial", "Setup")" class="modalShow2">
                                                        <i class="fa fa-plus "></i>
                                                    </a>
                                                </span>
                                                @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control", @required = true } })
                                            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Commission, htmlAttributes: new { @class = "control-label " })
                                            @Html.EditorFor(model => model.Commission, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Commission, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.JoinDate, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.JoinDate, new { htmlAttributes = new { @class = "form-control unstyled", @required = true } })
                                            @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
                                        </div>
                                        <input type="hidden" id="join_date" value="@Model.JoinDate" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-lg btnPro"><span class="fa fa-send"></span>Save</button>
                    <button type="button" class="btn btn-default btn-lg btnPro1" onclick="$('#ordine5').modal('hide');"><span class="fa fa-close"></span>Close</button>
                </div>
            </div>
        </div>
    }
    <div id="ModalData11"></div>
    
    <script>
        $(document).ready(function () {
            var date = $('#join_date').val();
            if (date !== '1/1/0001 12:00:00 AM' && date!=='') {
                var displayDate = new Date(date);
                displayDate.setDate(displayDate.getDate()+1);
                document.getElementById("@Html.IdFor(a=>a.JoinDate)").valueAsDate = displayDate;
            }
            else {
                document.getElementById("@Html.IdFor(a=>a.JoinDate)").valueAsDate = new Date();

            }
        });


        function UpdateDdlDepartment() {
            $.ajax({
                url: "@Url.Action("GetDepartmentDdl","Setup")",
                type: 'GET',
                cache: false,
                success: function (result) {
                    var $dropdown = $("#@Html.IdFor(a=>a.DepartmentId)");
                    $dropdown.empty();
                    $dropdown.append($("<option />").val('').text("Select an Option"));
                    $.each(result, function (index, value) {
                        $dropdown.append($("<option />").val(value.Id).text(value.Name));
                    });

                }
            });

        }
        function UpdateDdlDesignation() {
            $.ajax({
                url: "@Url.Action("GetDesignationDdl","Setup")",
                type: 'GET',
                cache: false,
                success: function (result) {
                    var $dropdown = $("#@Html.IdFor(a=>a.DesignationId)");
                    $dropdown.empty();
                    $dropdown.append($("<option />").val('').text("Select an Option"));
                    $.each(result, function (index, value) {
                        $dropdown.append($("<option />").val(value.Id).text(value.Name));
                    });

                }
            });

        }
        $('a.modalShow1').on('click', function () {
            $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function(result) {
                    $('#ModalData11').html(result).find('#ordine2').modal('show');

                    $.unblockUI();
                }
            });

            return false;
        });
        $('a.modalShow2').on('click', function () {
            $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function (result) {
                    $('#ModalData11').html(result).find('#ordine2').modal('show');

                    $.unblockUI();
                }
            });

            return false;
        });
    </script>

    <script>
        $("input").on("keypress", function (e) {
            if (e.which === 32 && !this.value.length)
                e.preventDefault();
        });
    </script>


</div>



