@model POSApp.Core.ViewModels.CouponModelView

@{
    Layout = null;
}

<div id="ordine" class="modal fade" role="dialog">
    @{ string s = ViewBag.edit;}

    @using (Html.BeginForm(s, "Setup", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content ">
                <div class="modal-header modalheader">
                    <button type="button" class="close modalheader" data-dismiss="modal">×</button>

                    @if (s.Contains("Add"))
                    {
                        <h4 class="modal-title">
                            Add Coupon
                        </h4>
                    }
                    else
                    {
                        <h4 class="modal-title">
                            Edit Coupon
                        </h4>
                    }


                </div>
                <div class="modal-body">
                    <div class="panel panel-bd lobidrag">

                        <div class="panel-body">

                            @Html.HiddenFor(a => a.Id)
                            @Html.HiddenFor(a => a.CreatedBy)
                            @Html.HiddenFor(a => a.CreatedOn)
                            @Html.HiddenFor(a => a.StoreId)


                            <div class="">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row">
                                    <div class="form-group">

                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>





                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                            @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-2">
                                            @Html.LabelFor(model => model.ValidFrom, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ValidFrom, new { htmlAttributes = new { @class = "form-control unstyled", @required = "true" } })
                                            @Html.ValidationMessageFor(model => model.ValidFrom, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-2">
                                            @Html.LabelFor(model => model.ValidTill, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ValidTill, new { htmlAttributes = new { @class = "form-control unstyled", @required = "true" } })
                                            @Html.ValidationMessageFor(model => model.ValidTill, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                        </div>
                                        @{
                                            List<SelectListItem> Ddl = new List<SelectListItem>();
                                            Ddl.Add(new SelectListItem { Text = "Mon", Value = "Mon" });
                                            Ddl.Add(new SelectListItem { Text = "Tue", Value = "Tue" });
                                            Ddl.Add(new SelectListItem { Text = "Wed", Value = "Wed" });
                                            Ddl.Add(new SelectListItem { Text = "Thu", Value = "Thu" });
                                            Ddl.Add(new SelectListItem { Text = "Fri", Value = "Fri" });
                                            Ddl.Add(new SelectListItem { Text = "Sat", Value = "Sat" });
                                            Ddl.Add(new SelectListItem { Text = "Sun", Value = "Sun" });

                                        }
                                        <div class="col-md-2">
                                            @Html.LabelFor(model => model.Days, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.tempDays, Ddl, new { @class = "form-control", @required = "true", @multiple = "multiple" })
                                            @Html.ValidationMessageFor(model => model.tempDays, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-2">
                                            @Html.LabelFor(model => model.IsPercentage, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.IsPercentage, new { htmlAttributes = new { @class = "" } })
                                            @Html.ValidationMessageFor(model => model.IsPercentage, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>



                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-lg btnPro">Save</button>
                    <button type="button" class="btn btn-default btn-lg btnPro1" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>

