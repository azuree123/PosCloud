@using POSApp.Core.Enums
@model POSApp.Core.ViewModels.TimedEventViewModel

@{
    Layout = null;
}

<div id="ordine" class="modal fade" role="dialog">
    @{ string s = ViewBag.edit;}

    @using (Html.BeginForm(s, "Setup", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content ">
                <div class="modal-header modalheader">
                    <button type="button" class="close modalheader" data-dismiss="modal">×</button>

                    @if (s.Contains("Add"))
                    {
                        <h4 class="modal-title">
                            Add Timed Event
                        </h4>
                    }
                    else
                    {
                        <h4 class="modal-title">
                            Edit Timed Event
                        </h4>
                    }


                </div>
                <div class="modal-body">
                    <div class="panel panel-bd lobidrag">

                        <div class="panel-body">

                            @Html.HiddenFor(a => a.Id)
                            @Html.HiddenFor(a => a.CreatedBy)
                            @Html.HiddenFor(a => a.CreatedOn)
                            @Html.HiddenFor(a => a.StoreId)
                            <div class="">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="row">
                                    <div class="form-group">
                                   
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                                            @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label " })
                                            @Html.DropDownListFor(a => a.Type, new SelectList(Enum.GetValues(typeof(TimedEventType))), "Select Type", new { @class = "form-control" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Value, new {htmlAttributes = new {@class = "form-control"}})
                                            @Html.ValidationMessageFor(model => model.Value, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                             
                                <div class="row">
                                    <div class="form-group">
                                   
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.FromDate, new {htmlAttributes = new {@class = "form-control"}})
                                            @Html.ValidationMessageFor(model => model.FromDate, "", new {@class = "text-danger"})
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ToDate, new {htmlAttributes = new {@class = "form-control"}})
                                            @Html.ValidationMessageFor(model => model.ToDate, "", new {@class = "text-danger"})
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.FromHour, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.FromHour, new {htmlAttributes = new {@class = "form-control"}})
                                            @Html.ValidationMessageFor(model => model.FromHour, "", new {@class = "text-danger"})
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.FromHour, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ToHour, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ToHour, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                               
                                <div class="row form-group">
                                    @{
                                        List<SelectListItem> Ddl = new List<SelectListItem>();
                                        Ddl.Add(new SelectListItem { Text = "Mon", Value = "Mon" });
                                        Ddl.Add(new SelectListItem { Text = "Tue", Value = "Tue" });
                                        Ddl.Add(new SelectListItem { Text = "Wed", Value = "Wed" });
                                        Ddl.Add(new SelectListItem { Text = "Thu", Value = "Thu" });
                                        Ddl.Add(new SelectListItem { Text = "Fri", Value = "Fri" });
                                        Ddl.Add(new SelectListItem { Text = "Sat", Value = "Sat" });
                                        Ddl.Add(new SelectListItem { Text = "Sun", Value = "Sun" });

                                    }
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.Days, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Days, Ddl, new { @class = "form-control", @required = "true", @multiple = "multiple" })
                                        @Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">
                                   
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.IsActive)
                                                @Html.ValidationMessageFor(model => model.IsActive, "", new {@class = "text-danger"})
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <hr />
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-4">

                                            @Html.Label("Categories", htmlAttributes: new { @class = "control-label" })
                                            <div class="input-group">
                                                @Html.DropDownListFor(a=>a.Categories, Model.CatDdl, "Select an Option", new { @class = "form-control ",@multiple= "multiple", @data_plugin_multiselect="true" ,@data_plugin_options = "{ 'maxHeight': 200, 'includeSelectAllOption': true }" })
                                            </div>

                                        </div>
                                        <div class="col-md-4">

                                            @Html.Label("Products", htmlAttributes: new { @class = "control-label" })
                                            <div class="input-group">
                                                @Html.DropDownListFor(a => a.Products, Model.ProductDdl, "Select an Option", new { @class = "form-control ", @multiple = "multiple", @data_plugin_multiselect = "true", @data_plugin_options = "{ 'maxHeight': 200, 'includeSelectAllOption': true }" })
                                            </div>

                                        </div>
                                        <div class="col-md-4">

                                            @Html.Label("Branches", htmlAttributes: new { @class = "control-label" })
                                            <div class="input-group">
                                                @Html.DropDownListFor(a => a.Branches, Model.BranchDdl, "Select an Option", new { @class = "form-control ", @multiple = "multiple", @data_plugin_multiselect = "true", @data_plugin_options = "{ 'maxHeight': 200, 'includeSelectAllOption': true }" })
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-lg btnPro">Save</button>
                    <button type="button" class="btn btn-default btn-lg btnPro1" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>




















