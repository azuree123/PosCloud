@using POSApp.Core.Enums
@using POSApp.Core.Models
@model POSApp.Core.ViewModels.TimedEventViewModel

@{
    Layout = null;
    AlertModel alertModel = (AlertModel)TempData["Alert"];
    @Styles.Render("~/Content/css")
}   @Scripts.Render("~/bundles/vendor")

<div id="ordine" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    @{ string s = ViewBag.edit;}

    @using (Ajax.BeginForm(s, "Setup", null, new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "CreateAssetSuccess"
    }
        , new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content ">
                <div class="modal-header modalheader">
                    <button type="button" class="close modalheader" data-dismiss="modal">×</button>

                    @if (s.Contains("Add"))
                    {
                        <h4 class="modal-title">
                            Add Discount/ Timed Event
                        </h4>
                    }
                    else
                    {
                        <h4 class="modal-title">
                            Edit Discount/ Timed Event
                        </h4>
                    }


                </div>
                <div class="modal-body">
                    <div class="panel panel-bd lobidrag">

                        <div class="panel-body">
                            @if (alertModel != null)
                            {
                                @Html.Partial("~/Views/Shared/_AlertView.cshtml", alertModel)
                            }
                            @Html.HiddenFor(a => a.Id)
                            @Html.HiddenFor(a => a.CreatedBy)
                            @Html.HiddenFor(a => a.CreatedOn)
                            @Html.HiddenFor(a => a.StoreId)
                            <div class="">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="row">
                                    <div class="form-group">

                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label required1"  })
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder= POSApp.Resources.Resource.EnterName, autofocus = "" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.ArabicName, htmlAttributes: new { @class = "control-label",  })
                                            @Html.EditorFor(model => model.ArabicName, new { htmlAttributes = new { @class = "form-control", @placeholder = POSApp.Resources.Resource.EnterName } })
                                            @Html.ValidationMessageFor(model => model.ArabicName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label required1 " })
                                            @Html.DropDownListFor(a => a.Type, new SelectList(Enum.GetValues(typeof(TimedEventType))), "Select Type", new { @class = "form-control" })
                                        </div>


                                    </div>
                                </div>

                                <div class="row">
                                    <div class="form-group">
                                        <input type="hidden" id="date1" value="@Model.FromDate" />
                                        <input type="hidden" id="date2" value="@Model.ToDate" />
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control unstyled", @required = true } })
                                            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control unstyled", @required = true } })
                                            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                    </div>
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.DiscountCode, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.DiscountCode, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.DiscountCode, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.FromHour, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.FromHour, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.FromHour, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.ToHour, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.ToHour, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ToHour, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="row form-group">
                                    @{
                                        List<SelectListItem> Ddl = new List<SelectListItem>();
                                        Ddl.Add(new SelectListItem { Text = "Monday", Value = "Mon" });
                                        Ddl.Add(new SelectListItem { Text = "Tueday", Value = "Tue" });
                                        Ddl.Add(new SelectListItem { Text = "Wednesday", Value = "Wed" });
                                        Ddl.Add(new SelectListItem { Text = "Thursday", Value = "Thu" });
                                        Ddl.Add(new SelectListItem { Text = "Friday", Value = "Fri" });
                                        Ddl.Add(new SelectListItem { Text = "Saturday", Value = "Sat" });
                                        Ddl.Add(new SelectListItem { Text = "Sunday", Value = "Sun" });

                                    }
                                    <input type="hidden" id="daysDispaly" value="@Model.DaysDisplay"/>
                                    <div class="col-md-3">
                                        @Html.LabelFor(model => model.Days, htmlAttributes: new { @class = "control-label required1" })
                                        @Html.DropDownListFor(model => model.Days, Ddl, new { @class = "form-control", @required = "true", @multiple = "multiple" })
                                        @Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" })
                                        <input type="checkbox" onclick="Select_All($(this).prop('checked'), '@Html.IdFor(a=>a.Days)');" />
                                        @POSApp.Resources.Resource.SelectAll
                                    </div>
                                    
                                       
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.IsActive, new {@class = "form-control"})
                                            @Html.ValidationMessageFor(model => model.IsActive, "", new {@class = "text-danger"})
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.IsTaxable, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.IsTaxable, new { htmlAttributes = new { @class = "" } })
                                            @Html.ValidationMessageFor(model => model.IsTaxable, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.IsPercentage, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.IsPercentage, new { htmlAttributes = new { @class = "" } })
                                            @Html.ValidationMessageFor(model => model.IsPercentage, "", new { @class = "text-danger" })
                                        </div>
                                    
                                </div>
                                
                                <hr />

                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-4" id="CategoriesArea">
                                            <input type="hidden" id="categoriesDispaly" value="@Model.CategoriesDisplay"/>

                                            @Html.Label("Categories", htmlAttributes: new { @class = "control-label" })
                                            <div class="">
                                                @Html.DropDownListFor(a => a.Categories, Model.CatDdl, new { @class = "form-control ", @multiple = "multiple" })


                                                <input type="checkbox" onclick="Select_All($(this).prop('checked'),'@Html.IdFor(a=>a.Categories)');" />
                                                POSApp.Resources.Resource.SelectAll
                                            </div>

                                        </div>
                                        <input type="hidden" id="productsDispaly" value="@Model.ProductsDisplay" />

                                        <div class="col-md-4">

                                            @Html.Label("Products", htmlAttributes: new { @class = "control-label" })
                                            <div class="">
                                                @Html.DropDownListFor(a => a.Products, Model.ProductDdl, new { @class = "form-control ", @multiple = "multiple" })


                                                <input type="checkbox" onclick="Select_All($(this).prop('checked'), '@Html.IdFor(a=>a.Products)');" />
                                                @POSApp.Resources.Resource.SelectAll
                                            </div>
                                        </div>
                                        <input type="hidden" id="branchesDispaly" value="@Model.BranchesDisplay" />

                                        <div class="col-md-4" id="BranchesArea">

                                            @Html.Label("Branches", htmlAttributes: new { @class = "control-label" })
                                            <div class="">
                                                @Html.DropDownListFor(a => a.Branches, Model.BranchDdl, new { @class = "form-control disabled", @multiple = "multiple" })


                                                <input type="checkbox" onclick="Select_All($(this).prop('checked'), '@Html.IdFor(a=>a.Branches)');" />
                                                @POSApp.Resources.Resource.SelectAll
                                            </div>

                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-lg btnPro">@POSApp.Resources.Resource.Save</button>
                    <button type="button" class="btn btn-default btn-lg btnPro1" @*data-dismiss="modal"*@ onclick="$('#ordine').modal('hide'); removeElements = (elms) => [...elms].forEach(el => el.remove());removeElements( document.querySelectorAll('.modal-backdrop') );">@POSApp.Resources.Resource.Close</button>
                </div>
            </div>
        </div>
    }
</div>

<script>

    
    $("#@Html.IdFor(a=>a.Products)").select2();
    $("#@Html.IdFor(a=>a.Categories)").select2();
    $("#@Html.IdFor(a=>a.Branches)").select2();
    $("#@Html.IdFor(a=>a.Days)").select2();

    function Select_All(a, b) {
        if (a){
            $("#"+b+" > option").prop("selected","selected");
            $("#" + b +"").trigger("change");
        }else{
            $("#" + b +"").val("");
            $("#" + b +"").trigger("change");
        }
    }

    $(document).ready(function () {
       
       
        var selectedValues = $('#daysDispaly').val().split(',');
        $('#@Html.IdFor(a=>a.Days)').val(selectedValues).trigger("change");
        selectedValues = $('#productsDispaly').val().split(',');
        $('#@Html.IdFor(a=>a.Products)').val(selectedValues).trigger("change");
        selectedValues = $('#branchesDispaly').val().split(',');
        $('#@Html.IdFor(a=>a.Branches)').val(selectedValues).trigger("change");
        selectedValues = $('#categoriesDispaly').val().split(',');
        $('#@Html.IdFor(a=>a.Categories)').val(selectedValues).trigger("change");

        var date = document.getElementById('date1').value;
        var temp;
        if (date !== '1/1/0001 12:00:00 AM') {
            temp = new Date(date);
            temp.setDate(temp.getDate() + 1);
            if (date)
                document.getElementById('@Html.IdFor(a=>a.FromDate)').valueAsDate = temp;
        } else {
            document.getElementById('@Html.IdFor(a=>a.FromDate)').valueAsDate = new Date();
        }

            date = document.getElementById('date2').value;
        if (date !== '1/1/0001 12:00:00 AM') {
            temp = new Date(date);
            temp.setDate(temp.getDate() + 1);
            if (date)
                document.getElementById('@Html.IdFor(a=>a.ToDate)').valueAsDate = temp;
        } else {
            document.getElementById('@Html.IdFor(a=>a.ToDate)').valueAsDate = new Date();
        }
    });
  
</script>
<script>
    $("input").on("keypress", function (e) {
        if (e.which === 32 && !this.value.length)
            e.preventDefault();
    });
</script>
@Html.Raw(ViewBag.alert)













