@using POSApp.Core.Enums
@using POSApp.Core.Models
@model POSApp.Core.ViewModels.ProductCreateViewModel

@{
    Layout = null;
    AlertModel alertModel = (AlertModel)TempData["Alert"];
}

<div id="ordine" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">

    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content ">
            <div class="modal-header modalheader">
                <button type="button" class="close modalheader" data-dismiss="modal">×</button>
                @{ string s = ViewBag.edit;}

                
                    <h4 class="modal-title">
                        @POSApp.Resources.Resource.AddProduct
                    </h4>
               
               


            </div>
            <div class="modal-body">
                <div class="panel panel-bd lobidrag">

                    <div class="panel-body">

                        @using (Ajax.BeginForm(s, "Products", null, new AjaxOptions
                        {
                            HttpMethod = "POST",
                            OnSuccess = "CreateAssetSuccess"
                        }
                            , new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            if (alertModel != null)
                            {
                                @Html.Partial("~/Views/Shared/_AlertView.cshtml", alertModel)
                            }
                            @Html.HiddenFor(a => a.Id)
                            @Html.HiddenFor(a => a.ProductCode)
                            @Html.HiddenFor(a => a.CreatedBy)
                            @Html.HiddenFor(a => a.CreatedOn)
                            @Html.HiddenFor(a => a.Image)
                            @Html.HiddenFor(a => a.StoreId)
                            @Html.HiddenFor(a => a.CostPrice)

                            <div class="">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = true, @placeholder = @POSApp.Resources.Resource.EnterName, autofocus = "" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.ArabicName, htmlAttributes: new { @class = "control-label " })
                                            @Html.EditorFor(model => model.ArabicName, new { htmlAttributes = new { @class = "form-control", @placeholder = @POSApp.Resources.Resource.EnterName, autofocus = "" } })
                                            @Html.ValidationMessageFor(model => model.ArabicName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label required1" })
                                            <div class="input-group">
                                                @Html.DropDownListFor(model => model.CategoryId, Model.CategoryDdl, @POSApp.Resources.Resource.SelectanOption, new { @class = "form-control", @required = "true" })

                                                <span class="input-group-addon" style="">
                                                    <a href="@Url.Action("AddProductCategoryPartial", "Products")" class="modalShow1"><i class="fa fa-plus "></i></a>
                                                </span>

                                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                            </div>

                                        </div>




                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">


                                        <div class="col-md-4">
                                            @Html.LabelFor(a => a.UnitId, htmlAttributes: new { @class = "control-label required1" })
                                            <div class="input-group">
                                                @Html.DropDownListFor(a => a.UnitId, Model.UnitDdl, @POSApp.Resources.Resource.SelectanOption, new { @class = "form-control", @required = "true" })
                                                <span class="input-group-addon">
                                                    <a href="@Url.Action("AddUnitPartial", "Setup")" class="modalShow4"> <i class="fa fa-plus "></i></a>
                                                </span>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(a => a.SectionId, htmlAttributes: new { @class = "control-label required1" })
                                            <div class="input-group">
                                                @Html.DropDownListFor(a => a.SectionId, Model.SectionDdl, @POSApp.Resources.Resource.SelectanOption, new { @class = "form-control", @required = "true" })
                                                <span class="input-group-addon">
                                                    <a href="@Url.Action("AddSectionPartial", "Products")" class="modalShow3"> <i class="fa fa-plus "></i></a>
                                                </span>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Attribute, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Attribute, new { htmlAttributes = new { @class = "form-control", @placeholder = @POSApp.Resources.Resource.EnterDescription } })
                                            @Html.ValidationMessageFor(model => model.Attribute, "", new { @class = "text-danger" })
                                        </div>
                              
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group ">

                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
                                            <input type="file" name="file" id="file" />
                                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })

                                        </div>
                                        @if (Model.Image != null)
                                        {
                                            <div class="col-md-4">
                                                @{

                                                    var base64 = Convert.ToBase64String(Model.Image);
                                                    var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                                                }
                                                <img src='@imgsrc' width="69px" height="58px" />
                                            </div>
                                        }
                                        <div class="">
                                            @Html.Label("Is VAT Applicable?", htmlAttributes: new { @class = "control-label col-xs-2", @style = "margin-top:26px" })
                                            @Html.EditorFor(model => model.IsTaxable, new { htmlAttributes = new { @class = "col-xs-2", @style = "margin-top:32px" } })
                                            @Html.ValidationMessageFor(model => model.IsTaxable, "", new { @class = "text-danger" })
                                        </div>
                                        <script>
                                            $("#@Html.IdFor(a => a.IsTaxable)").on("change",
                                                function() {
                                                    if (document.getElementById('@Html.IdFor(a => a.IsTaxable)')
                                                        .checked) {
                                                        $("#taxDdl").show();
                                                    } else {
                                                        $("#taxDdl").hide();
                                                    }
                                                });
                                        </script>
                                        <div class="col-md-4" style="display: none" id="taxDdl">
                                            @Html.LabelFor(a => a.TaxId, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.TaxId, Model.TaxDdl, @POSApp.Resources.Resource.SelectanOption, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.TaxId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="form-group">

                                    </div>
                                </div>
                                <hr />
                                <div class=" mb-md">
                                    <h4 class="text-center font-weight-bold" style="font-weight: bold">@POSApp.Resources.Resource.AddModifier</h4>
                          

                                </div>
                                <div class="row">
                                    <div class="col-md-offset-3 col-md-6" id="ModifierArea">


                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <input type="hidden" id="productsDispaly" value="@Model.ModifierDisplay" />
                                        <div class="col-md-12">

                                            <div class="">
                                                @Html.DropDownListFor(model => model.Modifiers, Model.ModifierDDl, null, new { @class = "form-control", @multiple = "multiple" })
                                                @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })

                                                <input type="checkbox" onclick="Select_All($(this).prop('checked'), '@Html.IdFor(a=>a.Modifiers)');" />
                                                Select All
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <button type="submit" class="hidden" id="productSubmit"></button>

                        }
                    </div>
                </div>

                <hr />
                <div class=" mb-md">
                    <h4 class="text-center font-weight-bold" style="font-weight: bold">@POSApp.Resources.Resource.SizesandPrices</h4>
                   

                </div>

                @{Html.RenderAction("AddProductItem", "Products");}

                <div id="AjaxUpdate">
                    <div class="row mb-lg">
                        <div class="col-md-12">
                            <table class="table mb-none" style="width: 100%" id="datatable-default">
                                <thead>
                                    <tr>

                                        <th>@POSApp.Resources.Resource.size</th>

                                        <th>@POSApp.Resources.Resource.Price</th>
                                        <th>@POSApp.Resources.Resource.Barcode</th>
                                        <th>@POSApp.Resources.Resource.Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td colspan="5" class="text-center">@POSApp.Resources.Resource.Norecordsfound</td>
                                    </tr>

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>


            </div>
            <div class="modal-footer">
                <button type="button" onclick="$('#productSubmit').click()" class="btn btn-default btn-lg btnPro"><span class="fa fa-send"></span>@POSApp.Resources.Resource.Save</button>
                <button type="button" class="btn btn-default btn-lg btnPro1" @*data-dismiss="modal"*@ onclick="$('#ordine').modal('hide'); removeElements = (elms) => [...elms].forEach(el => el.remove());removeElements( document.querySelectorAll('.modal-backdrop') );"><span class="fa fa-close"></span>@POSApp.Resources.Resource.Close</button>
            </div>
        </div>
    </div>


    <div id="ModalData1"></div>
    <div id="ModalData2"></div>
    <div id="ModalData3"></div>

    <script>
    var fired = false;
    function UpdateDdlCategory() {
        $.ajax({
            url: "@Url.Action("GetProductCategoryDdl", "Products")",
            type: 'GET',
            cache: false,
            success: function (result) {
                var $dropdown = $("#@Html.IdFor(a=>a.CategoryId)");
                $dropdown.empty();
                $dropdown.append($("<option />").val('').text("Select an Option"));
                $.each(result, function (index, value) {
                    $dropdown.append($("<option />").val(value.Id).text(value.Name));
                });

            }
        });

    }
    $('a.modalShow1').on('click', function (e) {

        $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
        if (!fired) {
            //mark as fired
            fired = true;
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function (result) {
                    $('#ModalData2').html('');
                    $('#ModalData3').html('');

                    $('#ModalData1').html(result).find('#ordine2').modal('show');
                    //$('#ordine2').modal('show');
                    $.unblockUI();
                    fired = false;
                }
            });
        }
        else {}

        return false;
    });

    function UpdateDdlSection() {
        $.ajax({
            url: "@Url.Action("GetSectionDdl", "Products")",
            type: 'GET',
            cache: false,
            success: function (result) {
                var $dropdown = $("#@Html.IdFor(a=>a.SectionId)");
                $dropdown.empty();
                $dropdown.append($("<option />").val('').text("Select an Option"));
                $.each(result, function (index, value) {
                    $dropdown.append($("<option />").val(value.Id).text(value.Name));
                });

            }
        });
    }



    $('a.modalShow3').on('click', function (e) {

        $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
        if (!fired) {
            //mark as fired
            fired = true;
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function (result) {
                    $('#ModalData1').html('');
                    $('#ModalData2').html('');
                    $('#ModalData3').html(result).find('#ordine3').modal('show');
                    //$('#ordine3').modal('show');
                    $.unblockUI();
                    fired = false;
                }
            });
        } else {}

        return false;
        });
    var tablefill = false;
    function ChangeTableFill() {
        tablefill = true;
    }
    function UpdateDdlUnit() {
        $.ajax({
            url: "@Url.Action("GetUnitDdl", "Setup")",
            type: 'GET',
            cache: false,
            success: function (result) {
                var $dropdown = $("#@Html.IdFor(a=>a.UnitId)");
                $dropdown.empty();
                $dropdown.append($("<option />").val('').text("Select an Option"));
                $.each(result, function (index, value) {
                    $dropdown.append($("<option />").val(value.Id).text(value.Name));
                });

            }
        });
    }
    $('a.modalShow4').on('click', function (e) {

        $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
        if (!fired) {
            //mark as fired
            fired = true;
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function (result) {
                    $('#ModalData1').html('');
                    $('#ModalData3').html('');
                    $('#ModalData2').html(result).find('#ordine2').modal('show');
                    //$('#ordine2').modal('show');
                    $.unblockUI();
                    fired = false;
                }
            });
        } else {}

        return false;
    });
    function UpdateDdlSize() {
        $.ajax({
            url: "@Url.Action("GetSizeDdl", "Setup")",
            type: 'GET',
            cache: false,
            success: function (result) {
                var $dropdown = $("#@Html.IdFor(a=>a.Size)");
                $dropdown.empty();
                $dropdown.append($("<option />").val('').text("Select an Option"));
                $.each(result, function (index, value) {
                    $dropdown.append($("<option />").val(value.Name).text(value.Name));
                });

            }
        });
    }
    $('a.modalShow5').on('click', function (e) {

        $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
        if (!fired) {
            //mark as fired
            fired = true;
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function (result) {
                    $('#ModalData1').html('');
                    $('#ModalData3').html('');
                    $('#ModalData2').html(result).find('#ordine2').modal('show');
                    //$('#ordine2').modal('show');
                    $.unblockUI();
                    fired = false;
                }
            });
        } else { }

        return false;
    });
    $('#datatable-default').dataTable();
    </script>
    <script>
        $("input").on("keypress", function (e) {
            if (e.which === 32 && !this.value.length)
                e.preventDefault();
        });
    </script>
    <script>
    $(document).ready(function () {
        $('.selectddl').select2();
    });
    $('#productDdl').on("change",
        function () {
            var val = $(this).val();
            if (val !== '') {
                $.ajax({
                    url: "@Url.Action("GetInfo","Products")",
                    type: "GET",
                    data: { id: val },
                    success: function(data) {
                        $('#size').text(data.size);
                        
                        $('#price').text(data.price);
                        $('#barcode').text(data.barcode);
                    },
                    error: function(error) {
                        console.log(error);
                    }

                });
            } else {
                $('#disSize').text('-');
                $('#price').val('');
            }
        });

    </script>
    <script>


    $("#@Html.IdFor(a=>a.Modifiers)").select2();


    function Select_All(a, b) {
        if (a){
            $("#"+b+" > option").prop("selected","selected");
            $("#" + b +"").trigger("change");
        }else{
            $("#" + b +"").val("");
            $("#" + b +"").trigger("change");
        }
    }

    $(document).ready(function () {



        selectedValues = $('#productsDispaly').val().split(',');
        $('#@Html.IdFor(a=>a.Modifiers)').val(selectedValues).trigger("change");







    });

    </script>
@Html.Raw(ViewBag.js)
</div>











