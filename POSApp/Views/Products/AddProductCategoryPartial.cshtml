@model POSApp.Core.ViewModels.ProductCategoryViewModel
@{
    Layout = null;
}

<div id="ordine2" class="modal fade" role="dialog">
    @{ string s = ViewBag.edit;}

    @using (Ajax.BeginForm(s, "Products", new AjaxOptions
    {
        HttpMethod = "Post",
        OnSuccess = "UpdateDdlCategory();$('#ordine2').modal('hide');"
       ,
        UpdateTargetId = "ordine2"
    }, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog modal-md">
            <!-- Modal content-->
            <div class="modal-content ">
                <div class="modal-header modalheader">
                    <button type="button" class="close modalheader" onclick="$('#ordine2').modal('hide');">×</button>

                    @if (s.Contains("Add"))
                    {
                        <h4 class="modal-title">
                            Add Product Category
                        </h4>
                    }
                    else
                    {
                        <h4 class="modal-title">
                            Edit Product Category
                        </h4>
                    }


                </div>
                <div class="modal-body">
                    <div class="panel panel-bd lobidrag">

                        <div class="panel-body">

                            @Html.HiddenFor(a => a.Id)
                            @Html.HiddenFor(a => a.CreatedBy)
                            @Html.HiddenFor(a => a.CreatedOn)
                            <div class="">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    <div class=" col-md-6">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label required1" })
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = true, autofocus = "" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label required1" })
                                        <div class="input-group">
                                            @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)ViewBag.ddl, "Select an Option", new { @id = "TypeDdl",@class = "form-control", @required = true  })
                                            <span class="input-group-addon" style="   ">
                                                <a href="@Url.Action("AddProductCategoryGroupPartial","Products")" class="modalShow2"><i class="fa fa-plus "></i></a>
                                            </span>
                                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    </div>

                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-lg btnPro"><span class="fa fa-send"></span>Save</button>
                    <button type="button" class="btn btn-default btn-lg btnPro1" onclick="$('#ordine2').modal('hide');"><span class="fa fa-close"></span>Close</button>
                </div>
            </div>
        </div>
    }
    <div id="ModalData3"></div>
    <script>

        function UpdateDdlCategoryGroup() {
            $.ajax({
                url: "@Url.Action("GetProductCategoryGroupDdl", "Products")",
                type: 'GET',
                cache: false,
                success: function (result) {
                    var $dropdown = $("#TypeDdl");
                    $dropdown.empty();
                    $dropdown.append($("<option />").val('').text("Select an Option"));
                    $.each(result, function (index, value) {
                        $dropdown.append($("<option />").val(value.Id).text(value.Name));
                    });

                }
            });

        }
        $('a.modalShow2').on('click', function () {
            $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function (result) {
                    $('#ModalData3').html(result);
                    $('#ordine3').modal('show');
                    $.unblockUI();
                }
            });

            return false;
        });

    </script>
</div>
<script>
    $("input").on("keypress", function (e) {
        if (e.which === 32 && !this.value.length)
            e.preventDefault();
    });
</script>