@using POSApp.Core.Enums
@using POSApp.Core.Models
@using POSApp.Core.ViewModels
@using POSApp.Services
@model POSApp.Core.ViewModels.RecipeViewModel

@{
    Layout = null;
    AlertModel alertModel = (AlertModel)TempData["Alert"];
}

<div id="ordine" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    @{ string s = ViewBag.edit;}

    @using (Ajax.BeginForm(s, "Products", null, new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = " $('#changeData').html(data);"
    }
        , new { enctype = "multipart/form-data", id = "client" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content ">
                <div class="modal-header modalheader">
                    <button type="button" class="close modalheader" data-dismiss="modal">×</button>

                    @if (s.Contains("Add"))
                    {
                    <h4 class="modal-title">
                        @POSApp.Resources.Resource.AddRecipe
                    </h4>
                    }
                    else
                    {
                        <h4 class="modal-title">
                            Edit Recipe
                        </h4>
                    }

                    <button type="reset" style="display: none" id="resetBtn">reset</button>
                </div>
                <div id="changeData" class="modal-body">
                    <div class="panel panel-bd lobidrag">

                        <div class="panel-body">
                            
                            @if (alertModel != null)
                            {
                                @Html.Partial("~/Views/Shared/_AlertView.cshtml", alertModel)
                            }
                            @Html.HiddenFor(a => a.Id)
                            @Html.HiddenFor(a => a.CreatedBy)
                            @Html.HiddenFor(a => a.CreatedOn)
                            @Html.HiddenFor(a => a.ProductCode)
                            @Html.HiddenFor(a => a.StoreId)


                            <div class="row">

                                @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                                <div class="col-md-3">
                                    @Html.LabelFor(model => model.IngredientCode, htmlAttributes: new {@class = "control-label required1"})
                                    <div class="">
                                        @Html.DropDownListFor(model => model.IngredientCode, Model.ProductDDl, @POSApp.Resources.Resource.SelectanOption, new {@class = "form-control",@id="hello", @required = "true" })
                                        @Html.ValidationMessageFor(model => model.IngredientCode, "", new {@class = "text-danger"})

                                    </div>

                                </div>
                               
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label" })
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @id = "quty2", @placeholder = @POSApp.Resources.Resource.EnterQuantity } })
                                       

                                        @*<input class="form-control" id="quty" type="number" min="1" required="" name="purchaseQuantity" placeholder="Purchase" />*@

                                        <span class="input-group-addon" style="   ">
                                            <span id="disUnit" class="input-group-text">-</span>
                                        </span>

                                    </div>
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.Calories, htmlAttributes: new {@class = "control-label"})
                                    @Html.EditorFor(model => model.Calories, new {htmlAttributes = new {@class = "form-control", @placeholder = "Enter Calories"}})
                                    @Html.ValidationMessageFor(model => model.Calories, "", new {@class = "text-danger"})

                                </div>
                                <div class="col-md-2">
                                    @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label required1" })
                                    @{
                                        if (Global.GetLang().Contains("Ar"))
                                        {

                                            <hijri-date-picker input-name="ExpiryDate" selected-date="@Model.ExpiryDate.ToString("yyyy/MM/dd")" class-name="form-control" date-format="iYYYY/iMM/iDD"></hijri-date-picker>
                                        }
                                        else
                                        {

                                            @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control unstyled", @required = true } })
                                            <input type="hidden" id="expiry_date" value="@Model.ExpiryDate" />
                                            <script>
                                                        $(document).ready(function () {
                                                            var date = $('#expiry_date').val();
                                                            if (date !== '1/1/0001 12:00:00 AM' && date !== '') {
                                                                var displayDate = new Date(date);
                                                                displayDate.setDate(displayDate.getDate() + 1);
                                                                document.getElementById("@Html.IdFor(a=>a.ExpiryDate)").valueAsDate = displayDate;
                                                            } else {
                                                                document.getElementById("@Html.IdFor(a=>a.ExpiryDate)").valueAsDate = new Date();

                                                            }
                                                        });
                                            </script>

                                        }
                                    }
                                    @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-1 ">
                                    <div class="pull-right" style="margin-top: 24px;">

                                        <button type="submit" class="btn btn-default btn-sm btnPro"><span class="glyphicon glyphicon-plus"></span></button>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="table-responsive" id="renderData">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>@POSApp.Resources.Resource.Ingredient</th>
                                    
                                    <th>@POSApp.Resources.Resource.Quantity</th>
                                    <th>@POSApp.Resources.Resource.Unit</th>
                                    <th>@POSApp.Resources.Resource.Calories</th>
                                    <th>@POSApp.Resources.Resource.Expiry Date</th>
                                    <th>@POSApp.Resources.Resource.Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var data in Model.RecipeList)
                                {
                                <tr>
                                    <td>@data.IngredientName</td>

                                    <td>@(data.Quantity)</td>
                                    <td>@(data.Unit)</td>
                                    <td>@data.Calories</td>
                                    <td>@data.ExpiryDate.ToShortDateString()</td>

                                    <td>
                                        @Ajax.ActionLink(" ", "DeleteRecipe", "Products", new { id = data.Id, code = data.ProductCode }, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "renderData" }, new { @class = "btn btn-default text-danger  btn-sm fa fa-trash", data_toggle = "tooltip", title = @POSApp.Resources.Resource.Delete, onclick = "return confirm('Are you sure?');" })
                                    </td>

                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="$('.modal-backdrop').remove();" class="btn btn-default btn-lg btnPro1" data-dismiss="modal">@POSApp.Resources.Resource.Save</button>

                </div>
            </div>
        </div>
    }

</div>

<script>
    $("input").on("keypress", function (e) {
        if (e.which === 32 && !this.value.length)
            e.preventDefault();
    });

</script>
<script>
   
    $('#hello').on("change",
        function () {
            var val = $(this).val();
            if (val !== '') {
                $.ajax({
                    url: "@Url.Action("GetProductInfo","Products")",
                    type: "GET",
                    data: { id: val },
                    success: function(data) {
                       
                        $('#disUnit').text(data.IngredientUnit);
                       
                    },
                    error: function(error) {
                        console.log(error);
                    }

                });
            } else {
                $('#disQty').text('-');
               
            }
        });

</script>
@Html.Raw(ViewBag.alert)

























