@using System.Web.UI.WebControls
@using Newtonsoft.Json
@using POSApp.Core.Enums
@model POSApp.Core.ViewModels.ModifierOptionViewModel
@{
    Layout = null;
}

<div id="ordine" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">

    @{ string s = ViewBag.edit;}
    @using (Ajax.BeginForm("AddModifierOption", "Products", new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "AjaxUpdate",
        OnSuccess = "$('#ordine').modal('hide');ChangeTableFill();"
    }, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog modal-block-md">
            <!-- Modal content-->
            <div class="modal-content ">
                <div class="modal-header modalheader">

                    <button type="button" class="close modalheader" data-dismiss="modal">×</button>

                    @if (s.Contains("Add"))
                    {
                        <h4 class="modal-title">
                            Add Modifier Option
                        </h4>
                    }
                    else
                    {
                        <h4 class="modal-title">
                            Edit Modifier Option
                        </h4>
                    }


                </div>
                <div class="modal-body">
                    <div class="panel panel-bd lobidrag">

                        <div class="panel-body">




                            <div class="">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row">


                                    <div class="col-md-8  col-md-offset-2">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label"})
                                            @Html.TextBoxFor(model => model.Name, new {@class = "form-control", @required = true, @id = "nameDis", @placeholder = "Enter Name"})
                                            @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                    <div class="col-md-8 col-md-offset-2">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CostType, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.CostType, new SelectList(Enum.GetValues(typeof(CostType))), "Select an Option", new { @class = "form-control", @required = true })
                                            @Html.ValidationMessageFor(model => model.CostType, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <script>
                                        $(document).ready(function () {
                                           
                                            if($("#@Html.IdFor(a=>a.CostType)").val()==="Fixed") {
                                                $("#costDisply").show();
                                            } else {
                                                $("#costDisply").hide();
                                            }

                                        });
                                        $("#@Html.IdFor(a=>a.CostType)").on("change",
                                            function() {
                                                if($(this).val()==="Fixed") {
                                                    $("#costDisply").show();
                                                } else {
                                                    $("#costDisply").hide();
                                                }
                                            });
                                    </script>
                                    <div class="col-md-8 col-md-offset-2" id="costDisply" style="display: none">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-8 col-md-offset-2">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IsTaxable, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.IsTaxable, new { htmlAttributes = new { @class = "" } })
                                            @Html.ValidationMessageFor(model => model.IsTaxable, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="col-md-8 col-md-offset-2">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>



                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-lg btnPro">Save</button>
                    <button type="button" class="btn btn-default btn-lg btnPro1" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>
<script>
    $(document).ready(function () {
        $('#nameDis').focus();
    });
   
</script>

@Html.Raw(ViewBag.com)