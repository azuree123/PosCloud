@model POSApp.Core.ViewModels.ComboViewModel

@{
    ViewBag.Title = "AddCombo";
    int number = 1;

}
<style>
    .table > thead > tr > th {
        background-color: rgba(153, 153, 153, 0.4);
        padding: 16px 0;
    }
</style>


<!-- start: page -->
<div class="container-fluid">

    @using (Html.BeginForm())
    {
        <div class="row mt-lg">

            @Html.HiddenFor(a => a.Id)
            @Html.HiddenFor(a => a.ProductCode)
            @Html.HiddenFor(a => a.CreatedBy)
            @Html.HiddenFor(a => a.CreatedOn)
            @Html.HiddenFor(a => a.Image)
            @Html.HiddenFor(a => a.StoreId)


            <div class="col-md-12">
                <div class="tabs  tabs-left">
                    <div class="row">
                        <div class="col-md-12 text-center  col-xs-12 mb-xlg">
                            <ul class="snip1189  ">


                                <li class="mt-xs  current" id="basicInfo">
                                    <a href="#basicdata" class="" data-toggle="tab" onclick="$('#basicInfo').addClass('current'); $('#tranInfo').removeClass('current');">

                                        Basic Data
                                    </a>
                                </li>

                                <li id="tranInfo">
                                    <a href="#transactionitems" data-toggle="tab" id="modifierOption" onclick="$('#tranInfo').addClass('current'); $('#basicInfo').removeClass('current');">Combo Options </a>
                                </li>
                            </ul>
                            <hr />
                            <div class="row mt-md">
                                <div class="col-md-12">
                                    <h4 class=" wb-color  text-center">New Combo</h4>
                                </div>
                            </div>
                        </div>
                        <div class="tab-content col-md-8 col-xs-12 col-md-offset-2  p-xlg">
                            <div class="row mb-xlg">
                                <div class="col-md-12">


                                    <button type="submit" class="btn outline-success btn-sm" style="float:right;font-size:17px" onclick="return CheckData();"><span class="fa fa-save mr-md"></span> Save</button>
                                </div>
                            </div>
                            <div id="basicdata" class="tab-pane active">
                                <h4 class="mt-none mb-lg ">Basic Data</h4>
                                <div class="row">
                                    
                                        <div class="form-group">
                                            
                                            <div class="col-md-4">
                                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label required1" })
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-md-4">
                                                    @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })
                                                    @Html.DropDownListFor(model => model.CategoryId, Model.CategoryDdl, "Select an Option", new {@class = "form-control", @required = "true"})
                                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
                                            </div>
                                            <div class="col-md-4">
                                                @Html.LabelFor(a => a.SectionId, htmlAttributes: new { @class = "control-label" })
                                                @Html.DropDownListFor(model => model.SectionId, Model.SectionDdl, "Select an Option", new { @class = "form-control", @required = "true" })
                                                @Html.ValidationMessageFor(model => model.SectionId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                <div class="row">
                                    <div class="form-group ">
                                        <div class="col-md-4">
                                            @Html.LabelFor(a => a.UnitId, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.UnitId, Model.UnitDdl, "Select an Option", new { @class = "form-control", @required = "true" })
                                            @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.CostPrice, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                            @Html.ValidationMessageFor(model => model.CostPrice, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="form-group">


                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Attribute, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.Attribute, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">

                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label required1" })
                                            <input type="file" name="file" id="file" />
                                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-4">
                                            @Html.LabelFor(model => model.Barcode, htmlAttributes: new { @class = "control-label required1 " })
                                            @Html.EditorFor(model => model.Barcode, new {htmlAttributes = new {@class = "form-control", @required = "true"}})
                                            @Html.ValidationMessageFor(model => model.Barcode, "", new {@class = "text-danger"})
                                        </div>
                                        <div class="col-md-2">
                                            @Html.Label("Inventory Item", htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.InventoryItem, new { htmlAttributes = new { @class = "" } })
                                            @Html.ValidationMessageFor(model => model.InventoryItem, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-2">
                                            @Html.Label("Purchase Item", htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.PurchaseItem, new { htmlAttributes = new { @class = "" } })
                                            @Html.ValidationMessageFor(model => model.PurchaseItem, "", new { @class = "text-danger" })
                                        </div>
                                       
                                    </div>
                                </div>



                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-2">
                                            @Html.Label("FixedAsset Item", htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.FixedAssetItem, new { htmlAttributes = new { @class = "" } })
                                            @Html.ValidationMessageFor(model => model.FixedAssetItem, "", new { @class = "text-danger" })
                                        </div>
                                       
                                        <div class="col-md-2">
                                            @Html.Label("Is Taxable?", htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.IsTaxable, new { htmlAttributes = new { @class = "" } })
                                            @Html.ValidationMessageFor(model => model.IsTaxable, "", new { @class = "text-danger" })
                                        </div>
                                    
                                        <div class="col-md-4" style="display: none" id="taxDdl">
                                            @Html.LabelFor(a => a.TaxId, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.TaxId, Model.TaxDdl, "Select an Option", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.TaxId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div id="transactionitems" class="tab-pane">
                                <div class=" mb-lg" id="header-flex">
                                    <h4 class="mt-xs  " style="flex-grow: 8">Combo Options</h4>
                                    <a href="@Url.Action("AddComboOption", "Products")" class="modalShow" style="flex-grow: 0">
                                        <button type="button" class="btn outline-success btn-sm"><i class="fa fa-plus pr-sm"></i>Add New</button>

                                    </a>
                                </div>
                                <div id="AjaxUpdate">
                                    <div class="row mb-lg">
                                        <div class="col-md-12">
                                            <table class="table mb-none" style="width:100%" id="datatable-default">
                                                <thead>
                                                    <tr>
                                                        <th>ID</th>
                                                        <th>Name</th>
                                                        <th>Qty</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @*@if (Model != null)
                                                    {

                                                        if (Model.ModifierOptionViewModels.Count > 0)
                                                        {

                                                            foreach (var modelModifierOptionViewModel in Model.ModifierOptionViewModels)
                                                            {
                                                                <tr>
                                                                    <td>@(number++)</td>
                                                                    <td>@modelModifierOptionViewModel.Name</td>
                                                                    <td>@modelModifierOptionViewModel.Cost</td>
                                                                    <td>@modelModifierOptionViewModel.Price</td>
                                                                    <td>
                                                                        <a href="#" class="btn btn-default text-success btn-sm fa fa-edit  " onclick="ShowUpdate('@modelModifierOptionViewModel.Name.ToString()')" data-toggle="tooltip" title="Edit !"></a>
                                                                        @Ajax.ActionLink(" ", "DeleteModifierOption", "Products", new {name = @modelModifierOptionViewModel.Name, storeId = @modelModifierOptionViewModel.StoreId}, new AjaxOptions
                                                                        {
                                                                            HttpMethod = "GET",
                                                                            UpdateTargetId = "AjaxUpdate"
                                                                        }, new
                                                                        {
                                                                            @onclick = "return confirm('Are you sure?')",
                                                                            @class = "btn btn-danger btn-sm fa fa-trash-o",
                                                                            @style = "color: #ffffff;"
                                                                        })
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                        else
                                                        {*@
                                                            <tr>
                                                                <td colspan="4" class="text-center">No records found</td>
                                                            </tr>
                                                        @*}
                                                    }*@

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                <div class="hidden">
                                    <h4 class="mb-lg ">Add items From Tag</h4>
                                    <div class="row mb-lg">
                                        <div class="col-md-9 col-lg-offset-2">
                                            <div class="form-group">
                                                <label class="control-label">
                                                    Select Tag
                                                </label>
                                                <input type="text" class="form-control unstyled" placeholder="" />
                                            </div>
                                        </div>
                                    </div>
                                    <h4 class="mb-lg ">Upload Items Via Excel</h4>
                                    <div class="row">
                                        <div class="col-md-9 col-lg-offset-2">
                                            <div class="form-group">
                                                <input type="file" class="" placeholder="" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


<div id="ModalData"></div>
@section scripts
{
    <script>
        $("#@Html.IdFor(a=>a.IsTaxable)").on("change",
            function() {
                if(document.getElementById('@Html.IdFor(a=>a.IsTaxable)').checked) {
                    $("#taxDdl").show();
                } else {
                    $("#taxDdl").hide();
                }
            });
    </script>
    <script>

        $('a.modalShow').on('click', function () {
           
            $.ajax({
                url: this.href,
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#ModalData').html(result).find('#ordine').modal('show');
                }
            });

            return false;
        });

        var tablefill = false;
        function CheckData() {

            var rowCount = $('#datatable-default >tbody >tr').length;
            if (tablefill && rowCount >= 1) {

                return true;
            }
            new PNotify({
                title: 'Modifier Options Cannot Be Empty',
                text:  'Please Enter Atleast 1 Modifier Option.',
                type: 'error'
            });
            $('#modifierOption').click();
            return false;
        }
        function ChangeTableFill() {
            tablefill = true;
        }

        function ShowUpdate(a,b) {

            $.ajax({
                url: "@Url.Action("UpdateComboOption","Products")",
                data: { productId: a, storeId:b},
                type: 'GET',
                cache: false,
                success: function (result) {
                    $('#ModalData').html(result).find('#ordine').modal('show');
                }
            });

            return false;

        }

        $('#datatable-default').dataTable();
    </script>
}










