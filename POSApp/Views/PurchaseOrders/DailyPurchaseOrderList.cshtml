@model IEnumerable<POSApp.Core.ViewModels.TransMasterViewModel>

@{
    ViewBag.Title = "PurchaseOrderList";
}



<!-- start: page -->
<section class="panel">

    <header class="panel-heading">
        <div class="row">
            <div class="col-md-12">


                <div class="" id="header-flex">
                    <h3 class="wb-color" style="flex-grow: 8"><b>Daily Purchasing </b></h3>


                </div>





            </div>
        </div>


        <h2 class="panel-title"></h2>
    </header>
    <div class="panel-body">
        <div class="table-responsive">
            <table class="table mb-none" style="width:100%" id="datatable-default">
                <thead>
                    <tr>

                        <th width="5%">@POSApp.Resources.Resource.ID</th>
                        <th>@POSApp.Resources.Resource.Supplier</th>
                        <th>@POSApp.Resources.Resource.Date</th>
                        <th>@POSApp.Resources.Resource.Invoice</th>
                        <th>@POSApp.Resources.Resource.TotalPrice</th>
                        <th>@POSApp.Resources.Resource.Type</th>
                        <th width="15%">@POSApp.Resources.Resource.Action</th>

                    </tr>
                </thead>
                <tbody>
                    @{ int i = 1;}
                    @foreach (var purchaseOrder in Model)
                    {
                        <tr>
                            <td>@(i++)</td>
                            <td>@purchaseOrder.BusinessPartnerName</td>
                            <td>@purchaseOrder.TransDate</td>
                            <td>@purchaseOrder.TransCode</td>
                            <td>@purchaseOrder.TotalPrice</td>
                            <td>@purchaseOrder.Type</td>
                            <td>
                                @Html.ActionLink(" ", "PreviewPurchasing", "PurchaseOrders", new { id = @purchaseOrder.Id, storeId = @purchaseOrder.StoreId }, new { @class = "btn btn-default  btn-sm fa fa-eye  ", data_toggle = "tooltip", title = @POSApp.Resources.Resource.Preview })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>





<div id="ModalData"></div>
@section scripts
{
    <script>
        $('#datatable-default').dataTable();

        $('#datatable-default').on('click','a.modalShow', function () {
            $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function(result) {
                    $('#ModalData').html(result);
                    $('#ordine').modal('show');
                    $.unblockUI();
                }
            });

            return false;
        });
        $('a.modalShow').on('click', function () {
            $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } }); 
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function(result) {
                    $('#ModalData').html(result);
                    $('#ordine').modal('show');
                    $.unblockUI();
                }
            });

            return false;
        });
        // Using that prm reference, hook _initializeRequest
        Sys.WebForms.PageRequestManager.getInstance().add_initializeRequest(InitializeRequestBuchung);

        // Abfangen von Mehrfachklicks auf Buttons für asynchrone Postbacks im Updatepanel
        function InitializeRequestBuchung(sender, args) {
            var arrButtonIds = ["ButtonInsert", "ButtonUpdate"];

            // Get a reference to the PageRequestManager.
            var prm = Sys.WebForms.PageRequestManager.getInstance();
            if (prm.get_isInAsyncPostBack() & jQuery.inArray(args.get_postBackElement().id, arrButtonIds) > -1) {
                args.set_cancel(true);
            }
        }
    </script>
}


