@using POSApp.Core.Models
@using POSApp.SecurityFilters
@using POSApp.Services
@model IEnumerable<POSApp.Core.ViewModels.TransMasterViewModel>

@{
    ViewBag.Title = "OtherOutList";
    AlertModel alertModel = (AlertModel)TempData["Alert"];
}
@if (alertModel != null)
{
    @Html.Partial("~/Views/Shared/_AlertView.cshtml", alertModel)
}



<!-- start: page -->
<div class="row mt-md">
    <div class="col-md-12">
        <ul class="snip1189">
            @if (Config.StockTaking.StockTaking.CheckAccess())
            {
                <li class=""><a href="@Url.Action("StockTakingList","StockTaking")">@POSApp.Resources.Resource.stocktaking</a></li>

            }
            @if (Config.PurchaseOrders.PurchaseOrder.CheckAccess())
            {
                <li><a href="@Url.Action("PurchasingList", "PurchaseOrders")">@POSApp.Resources.Resource.Purchasing</a></li>

            }
            @if (Config.PurchaseOrders.Stock.CheckAccess())
            {

                <li><a href="@Url.Action("StockList", "PurchaseOrders")">@POSApp.Resources.Resource.StockIn</a></li>
            }
            @if (Config.PurchaseOrders.Transfer.CheckAccess())
            {

                <li><a href="@Url.Action("TransferList", "PurchaseOrders")">@POSApp.Resources.Resource.Transfer</a></li>
            }
            @if (Config.PurchaseOrders.OtherIn.CheckAccess())
            {
                <li><a href="@Url.Action("OtherInList", "PurchaseOrders")">@POSApp.Resources.Resource.OtherIn</a></li>

            }
            @if (Config.PurchaseOrders.OtherOut.CheckAccess())
            {
                <li class="current"><a href="@Url.Action("OtherOutList", "PurchaseOrders")">@POSApp.Resources.Resource.Otherout</a></li>

            }
            @if (Config.PurchaseOrders.Expiry.CheckAccess())
            {
                <li><a href="@Url.Action("ExpiryList", "PurchaseOrders")">@POSApp.Resources.Resource.Expiry</a></li>

            }
            @if (Config.PurchaseOrders.Waste.CheckAccess())
            {
                <li><a href="@Url.Action("WasteList", "PurchaseOrders")">@POSApp.Resources.Resource.Waste</a></li>

            }
            @if (Config.PurchaseOrders.Damage.CheckAccess())
            {
                <li><a href="@Url.Action("DamageList", "PurchaseOrders")">@POSApp.Resources.Resource.Damage</a></li>

            }
        </ul>
        <hr />

    </div>
</div>
<section class="panel">

    <header class="panel-heading">
        <div class="row">
            <div class="col-md-12">


                <div class="" id="header-flex">
                    <h3 class="wb-color" style="flex-grow: 8"><b>@POSApp.Resources.Resource.Otherout </b></h3>

                    @if (Config.PurchaseOrders.OtherOut.ManageAccess())
                    {


                    <a href="@Url.Action("AddOtherOut","PurchaseOrders")" style="flex-grow: 0.2">
                        <button type="button" class="btn outline-success btn-sm" id="#arrButtonIds"><i class="fa fa-plus pr-sm"></i>@POSApp.Resources.Resource.AddOtherOut</button>

                    </a>
                    }
                   

                </div>





            </div>
        </div>


        <h2 class="panel-title"></h2>
    </header>
    <div class="panel-body">
        <div class="table-responsive">
            <table class="table mb-none" style="width:100%" id="datatable-default">
                <thead>
                    <tr>
                        <th width="5%">@POSApp.Resources.Resource.ID</th>
                        <th>@POSApp.Resources.Resource.name</th>
                        <th>@POSApp.Resources.Resource.Date</th>
                        <th>@POSApp.Resources.Resource.Invoice</th>
                        <th>@POSApp.Resources.Resource.TotalPrice</th>
                        <th>@POSApp.Resources.Resource.Type</th>
                        <th width="15%">Action</th>

                    </tr>
                </thead>
                <tbody>
                    @{ int i = 1;}
                    @foreach (var purchaseOrder in Model)
                    {
                        <tr>
                            <td>@(i++)</td>
                            <td>@purchaseOrder.Name</td>
                            <td>@purchaseOrder.TransDate</td>
                            <td>@purchaseOrder.TransCode</td>
                            <td>@purchaseOrder.TotalPrice</td>
                            <td>@purchaseOrder.Type</td>
                            <td>
                                @if (Config.PurchaseOrders.OtherOut.ViewAccess())
                                {

                                @Html.ActionLink(" ", "PreviewOtherOut", "PurchaseOrders", new {id = @purchaseOrder.Id, storeId = @purchaseOrder.StoreId}, new {@class = "btn btn-default  btn-sm fa fa-eye  ", data_toggle = "tooltip", title = @POSApp.Resources.Resource.Preview})
                                }
                                @if (Config.PurchaseOrders.OtherOut.ManageAccess())
                                {

                                @Html.ActionLink(" ", "DeleteOtherOut", "PurchaseOrders", new {id = @purchaseOrder.Id, storeId = @purchaseOrder.StoreId}, new {@class = "btn btn-default text-danger  btn-sm fa fa-trash", data_toggle = "tooltip", title = @POSApp.Resources.Resource.Delete, onclick = "return confirm('Are you sure?');"})
                                }

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>





<div id="ModalData"></div>
@section scripts
{
    <script>
        $('#datatable-default').dataTable();

        $('#datatable-default').on('click', 'a.modalShow', function () {
            $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function (result) {
                    $('#ModalData').html(result);
                    $('#ordine').modal('show');
                    $.unblockUI();
                }
            });

            return false;
        });
        $('a.modalShow').on('click', function () {
            $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function (result) {
                    $('#ModalData').html(result);
                    $('#ordine').modal('show');
                    $.unblockUI();
                }
            });

            return false;
        });
        $('a.modalShow').on('click', function () {
            debugger;
            $.blockUI({ css: { backgroundColor: '#fff', color: '#0aaa5a' } });
            $.ajax({
                url: this.href,
                type: 'GET',
                success: function (result) {
                    $('#ModalData').html(result);
                    $('#ordine').modal('show');
                    $.unblockUI();
                }
            });

            return false;
        });
        // Using that prm reference, hook _initializeRequest
        Sys.WebForms.PageRequestManager.getInstance().add_initializeRequest(InitializeRequestBuchung);

        // Abfangen von Mehrfachklicks auf Buttons für asynchrone Postbacks im Updatepanel
        function InitializeRequestBuchung(sender, args) {
            var arrButtonIds = ["ButtonInsert", "ButtonUpdate"];

            // Get a reference to the PageRequestManager.
            var prm = Sys.WebForms.PageRequestManager.getInstance();
            if (prm.get_isInAsyncPostBack() & jQuery.inArray(args.get_postBackElement().id, arrButtonIds) > -1) {
                args.set_cancel(true);
            }
        }
    </script>
}



