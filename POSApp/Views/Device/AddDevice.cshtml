
@using Newtonsoft.Json
@using POSApp.Core.Models
@using POSApp.Services
@model POSApp.Core.ViewModels.DeviceViewModel

@{
    Layout = null;
    AlertModel alertModel = (AlertModel)TempData["Alert"];

}

<div id="ordine" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
    @{ string s = ViewBag.edit;}

    @using (Ajax.BeginForm(s, "Device", null, new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "CreateAssetSuccess"
    }
        , new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-dialog modal-md">
            <!-- Modal content-->
            <div class="modal-content ">
                <div class="modal-header modalheader">
                    <button type="button" class="close modalheader" data-dismiss="modal">×</button>

                    @if (s.Contains("Add"))
                    {
                    <h4 class="modal-title">
                        @POSApp.Resources.Resource.AddDevice
                    </h4>
                    }
                    else
                    {
                        <h4 class="modal-title">
                            Edit Device
                        </h4>
                    }


                </div>
                <div class="modal-body">
                    <div class="panel panel-bd lobidrag">

                        <div class="panel-body">
                            @if (alertModel != null)
                            {
                                @Html.Partial("~/Views/Shared/_AlertView.cshtml", alertModel)
                            }
                            @Html.HiddenFor(a => a.Id)
                            @Html.HiddenFor(a => a.CreatedBy)
                            @Html.HiddenFor(a => a.CreatedOn)
                            
                            <div class="">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label required1 " })
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @Required = true, @placeholder = "Enter Name", autofocus = "" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.ArabicName, htmlAttributes: new { @class = "control-label " })
                                            @Html.EditorFor(model => model.ArabicName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Name", autofocus = "" } })
                                            @Html.ValidationMessageFor(model => model.ArabicName, "", new { @class = "text-danger" })
                                        </div>


                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.License, htmlAttributes: new { @class = "control-label required1 " })
                                            @Html.EditorFor(model => model.License, new { htmlAttributes = new { @class = "form-control", @Required = true, @placeholder = "Enter License" } })
                                            @Html.ValidationMessageFor(model => model.License, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.DeviceCode, htmlAttributes: new { @class = "control-label required1" })
                                            @Html.EditorFor(model => model.DeviceCode, new { htmlAttributes = new { @class = "form-control", @Required = true, @placeholder = "Enter Device Code" } })
                                            @Html.ValidationMessageFor(model => model.DeviceCode, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.AppVersion, htmlAttributes: new { @class = "control-label required1 " })
                                            @Html.EditorFor(model => model.AppVersion, new { htmlAttributes = new { @class = "form-control", @Required = true, @placeholder = "Enter App Version" } })
                                            @Html.ValidationMessageFor(model => model.AppVersion, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.DownloadedDate, htmlAttributes: new { @class = "control-label required1 " })
                                            @{
                                                if (Global.GetLang().Contains("Ar"))
                                                {

                                                    <hijri-date-picker input-name="DownloadedDate" selected-date="@Model.DownloadedDate.ToString("yyyy/MM/dd")" class-name="form-control" date-format="iYYYY/iMM/iDD"></hijri-date-picker>
                                                }
                                                else
                                                {

                                                    @Html.EditorFor(model => model.DownloadedDate, new { htmlAttributes = new { @class = "form-control unstyled", @required = true } })
                                                    <input type="hidden" id="download_date" value="@Model.DownloadedDate" />
                                                    <script>
                                                        $(document).ready(function () {
                                                            debugger;
                                                            var date = $('#download_date').val();
                                                            if (date !== '1/1/0001 12:00:00 AM' && date !== '') {
                                                                var displayDate = new Date(date);
                                                                displayDate.setDate(displayDate.getDate() + 1);
                                                                document.getElementById("@Html.IdFor(a=>a.DownloadedDate)").valueAsDate = displayDate;
                                                            } else {
                                                                document.getElementById("@Html.IdFor(a=>a.DownloadedDate)").valueAsDate = new Date();

                                                            }
                                                        });
                                                    </script>

                                                }
                                            }
                                            @Html.ValidationMessageFor(model => model.DownloadedDate, "", new { @class = "text-danger" })
                                        </div>
                                       

                                    </div>
                                </div>


                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label required1 " })
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @Required = true, @placeholder = "Enter Address" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label required1 " })
                                            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", @Required = true, @placeholder = "Enter Contact No." } })
                                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>



                                <div class="row">
                                    <div class="form-group">

                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label " })
                                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter City Name" } })
                                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter State Name" } })
                                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.ReceiptHeader, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ReceiptHeader, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Receipt Header" } })
                                            @Html.ValidationMessageFor(model => model.ReceiptHeader, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.ReceiptFooter, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ReceiptFooter, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Receipt Footer" } })
                                            @Html.ValidationMessageFor(model => model.ReceiptFooter, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">

                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.RefundPin, htmlAttributes: new { @class = "control-label required1 " })
                                            @Html.PasswordFor(m => m.RefundPin, new { @class = "form-control", placeholder = "Type Password- 6 digits", @required = true })
                                            @Html.ValidationMessageFor(model => model.RefundPin, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Code" } })
                                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                        </div>
                                        
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.StoreId, htmlAttributes: new { @class = "control-label required1" })
                                            
                                                @Html.DropDownListFor(model => model.StoreId, Model.StoreDDl, "Select an Option", new { @class = "form-control", @required = true, autofocus = "" })
                                               
                                                @Html.ValidationMessageFor(model => model.StoreId, "", new { @class = "text-danger" })
                                            
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-default btn-lg btnPro">@POSApp.Resources.Resource.Save</button>
                    <button type="button" class="btn btn-default btn-lg btnPro1" @*data-dismiss="modal"*@ onclick="$('#ordine').modal('hide'); removeElements = (elms) => [...elms].forEach(el => el.remove());removeElements( document.querySelectorAll('.modal-backdrop') );">@POSApp.Resources.Resource.Close</button>
                </div>
            </div>
        </div>
    }
</div>

<script>
    $("input").on("keypress", function (e) {
        if (e.which === 32 && !this.value.length)
            e.preventDefault();
    });
</script>




