@model POSApp.Models.RegisterViewModel
@{
    //Layout = null;
}
<div class="mt-md pull-right">


    <a href="@Url.Action("UserList", "User")" style="flex-grow: 0">
        <button type="button" class="btn outline-danger btn-sm"><i class="fa fa-list-ol pr-sm"></i>User List</button>

    </a>
</div>
<div class="container-fluid ">
    <br />
    <br />
    <br />

    <h3 class="text-center text-danger">Register User</h3>
    <br />
    <br />

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form", id = "logoutForm" }))
    {


        @Html.AntiForgeryToken()




        <div class="col-md-12">
            <div class="tabs  tabs-left">
                <div class="row">
                    <div class="tab-content col-md-8 col-xs-12 col-md-offset-2  p-xlg">
                        <div>
                            @Html.ValidationSummary("", new { @class = "text-danger" })
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label required1 " })
                                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control ", placeholder = "Enter your name" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label required1 " })
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", autofocus = "autofocus", placeholder = "Enter your email", @required = true })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label required1 " })
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Type Password- 6 digits", @required = true })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label required1 " })
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm your password" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label " })
                                    @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control ", placeholder = "Enter your company name(if)" })
                                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label required1 " })
                                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control ", placeholder = "Enter your Mobile Number" })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group">
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label required1 " })
                                    @Html.DropDownListFor(model => model.EmployeeId, Model.EmpDdl, "Select an employee", new { @class = "form-control", @required = true })
                                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.StoreId, htmlAttributes: new { @class = "control-label required1 " })
                                    @Html.DropDownListFor(model => model.StoreId, Model.StoreDdl, "Select an store", new { @class = "form-control", @required = true,@onchange= "Changed(this.value)" })
                                    @Html.ValidationMessageFor(model => model.StoreId, "", new { @class = "text-danger" })
                                </div>
                               

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                @Html.TextAreaFor(m => m.Address, new { @class = "form-control ", placeholder = "Enter Address" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-6">
                                @Html.LabelFor(model => model.StoreIds, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.StoreIds,Model.StoreDdl,null, new { @class = "form-control " ,@multiple= "multiple" })
                                @Html.ValidationMessageFor(model => model.StoreIds, "", new { @class = "text-danger" })
                            </div>
                        </div>
                     

                        <div class="row" style="margin-top: 25px">

                            <div class="col-lg-offset-3 col-lg-3">


                                <button type="reset" class="btn btn-danger btn-block btn-md ">Reset</button>
                            </div>
                            <div class="col-lg-3">


                                <button type="submit" class="btn btn-success btn-block btn-md ">Create account</button>
                            </div>
                        </div>





                    </div>
                </div>
            </div>





        </div>

    }







</div>
   



    

 
















<!-- End Body Content -->

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("#@Html.IdFor(a=>a.StoreIds)").select2();
        function Changed(val) {
            if (val !== '') {
                var $dropdown = $('#@Html.IdFor(a=>a.StoreIds)');
                $dropdown.empty();
                @foreach (var stores in Model.StoreDdl)
                {
                    <text>
                        if(parseInt(val)!==@stores.Value)
                            $dropdown.append($("<option />").val(@stores.Value).text('@stores.Text'));
                    </text>
                }
              
            }
     
        }
        //prevent double form submission
        $('form', '#logoutForm').submit(function () {
            if ($(this).valid()) {
                $(this).find(':submit').attr('disabled', 'disabled');
            }
        });

    </script>
}
